1. 자동차 이동
2. 몇대의 자동차가  몇회 움직일수있는지.
3. 0~9사이중 4이상의 경우 움직일수 있따.



1. car - > 단순히 이동하는 값만. 자동차는 이동만하면된다.

2. cars- >자동차 객체들을 보관하는 자동차들 리스트에 추가해주기/

3. racing - >자동차들 이동시키면서 문자열로 출력.;



------------------

리팩토링

Car - > 이동부분 움직임에 대한 함수를 인터페이스로 따로 뺀다음 테스트를 할수있는 구조로만듬.
        RandomMove에서 자동차 이동에관한 랜덤값 AND 그리고 전진가능한지 여부를 할수있게 분리.
        우승자를 구하기위한 IsSamePosition 함수 추가.

Test - > 한개의 자동차 이동가능한지. 인터페이스로 분리해서 람다식으로 true Or false 값으로 자동차 이동 테스트가능
     - > IsSamePosition 함수로 서로 두개 의 다른 car 객체 거리비교 가능
     - > 랜덤값을 외부에서 제어함으로서 자동차 이동 거리 확인. 우승자 확인 테스트 코드 수정


Cars -> 생성자 함수형 인터페이스로 리팩토
        MoveAll함수도 외부에서 MovigStartegy를받아 구현체에서 랜덤값 제어





